# Generated by Django 4.2.4 on 2023-08-31 12:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='Имя пользователя')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия пользователя')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя пользователя')),
                ('is_active', models.BooleanField(default=True, help_text='Отметьте, если пользователь должен считаться активным. Уберите эту отметку вместо удаления учётной записи.', verbose_name='Активный')),
                ('is_staff', models.BooleanField(default=False, help_text='Отметьте, если пользователь может входить в административную часть сайта.', verbose_name='Статус персонала')),
                ('is_superuser', models.BooleanField(default=False, help_text='Указывает, что пользователь имеет все права без явного их назначения.', verbose_name='Статус суперпользователя')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации пользователя')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('latin_name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('rate', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('latin_name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='STExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('latin_name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='STQuest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('quest_cost', models.IntegerField()),
                ('package', models.BooleanField()),
                ('add_players', models.IntegerField()),
                ('actor_second_actor', models.IntegerField()),
                ('discount_sum', models.IntegerField()),
                ('discount_desc', models.CharField(max_length=255)),
                ('room_sum', models.IntegerField()),
                ('room_quantity', models.IntegerField()),
                ('video', models.IntegerField()),
                ('photomagnets_quantity', models.IntegerField()),
                ('photomagnets_sum', models.IntegerField(blank=True, null=True)),
                ('birthday_congr', models.IntegerField()),
                ('easy_work', models.IntegerField()),
                ('night_game', models.IntegerField()),
                ('travel', models.BooleanField()),
                ('actors', models.ManyToManyField(blank=True, related_name='actor_stquest', to=settings.AUTH_USER_MODEL)),
                ('administrator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='administrator_stquest', to=settings.AUTH_USER_MODEL)),
                ('animator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='animatator_stquest', to=settings.AUTH_USER_MODEL)),
                ('quest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.quest')),
                ('room_employee_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='room_employee_stquest', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='STPenalty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('quests', models.ManyToManyField(blank=True, to='main.quest')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='STExpenseSubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('latin_name', models.CharField(max_length=255, unique=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.stexpensecategory')),
            ],
        ),
        migrations.CreateModel(
            name='STExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('quests', models.ManyToManyField(blank=True, to='main.quest')),
                ('sub_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.stexpensesubcategory')),
            ],
        ),
        migrations.CreateModel(
            name='STBonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('quests', models.ManyToManyField(blank=True, to='main.quest')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QSalary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('stquest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.stquest')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QIncome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('game', models.IntegerField()),
                ('room', models.IntegerField()),
                ('video', models.IntegerField()),
                ('photomagnets', models.IntegerField()),
                ('actor', models.IntegerField()),
                ('total', models.IntegerField(blank=True, null=True)),
                ('quest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.quest')),
                ('stquest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.stquest')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='quest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.quest'),
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(blank=True, to='main.role', verbose_name='Роли пользователя'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
